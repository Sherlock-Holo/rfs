on: [push, pull_request]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: -- --nocapture

      - name: integration test
        run: ./test.sh

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: nightly
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: clippy
#          args: -- -D warnings

  build-client:
    name: build client
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: nightly
          override: true

      - name: build
        run: cd rfs-client && cargo build --release -Z unstable-options --out-dir .

      - uses: actions/upload-artifact@v1
        with:
          name: rfs-client
          path: rfs-client/rfs-client

  build-client-image:
    name: build client image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: login docker.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build image
        id: build-iamge
        uses: redhat-actions/buildah-build@v2
        with:
          registry: docker.io
          image: docker.io/sherlockholo/rfs-client
          tags: latest
          extra-args: |
            --target client
          containerfiles: |
            ./Dockerfile

      - name: push image
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: docker.io

      - name: print image url
        run: echo "Image pushed to ${{ steps.push-image.outputs.registry-paths }}"

  build-server:
    name: build server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: nightly
          override: true

      - name: build
        run: cd rfs-server && cargo build --release -Z unstable-options --out-dir .

      - uses: actions/upload-artifact@v1
        with:
          name: rfs-server
          path: rfs-server/rfs-server

  build-server-image:
    name: build server image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: login docker.io
        uses: redhat-actions/podman-login@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build image
        id: build-iamge
        uses: redhat-actions/buildah-build@v2
        with:
          registry: docker.io
          image: docker.io/sherlockholo/rfs-server
          tags: latest
          extra-args: |
            --target server
          containerfiles: |
            ./Dockerfile

      - name: push image
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: docker.io

      - name: print image url
        run: echo "Image pushed to ${{ steps.push-image.outputs.registry-paths }}"
